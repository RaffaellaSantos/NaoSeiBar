// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nao_Sei_Bar_Backend.src.data;

#nullable disable

namespace NSB_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241208032850_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("NSB_API.data.entities.Funcionario", b =>
                {
                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CargaHorario")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataContratacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Funcao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Salario")
                        .HasColumnType("double");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Cpf");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("NaoSeiBar.src.data.entities.Cliente", b =>
                {
                    b.Property<string>("cpf")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("dataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("cpf");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("NaoSeiBar.src.data.entities.Comanda", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("clientecpf")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("dataCompra")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("horarioCompra")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nomeVendedor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("produtoId")
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.Property<double>("valorVenda")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("clientecpf");

                    b.HasIndex("produtoId");

                    b.ToTable("Comandas");
                });

            modelBuilder.Entity("NaoSeiBar.src.data.entities.Fornecedor", b =>
                {
                    b.Property<string>("Cnpj")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Agencia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataContratacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroConta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("StatusFornecedor")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Cnpj");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("NaoSeiBar.src.data.entities.Lote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFornecimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FornecedorCnpj")
                        .HasColumnType("varchar(255)");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorCnpj");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("Nao_Sei_Bar_Backend.src.data.entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FornecedorCnpj")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("LoteId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("ValorCompra")
                        .HasColumnType("double");

                    b.Property<double>("ValorVenda")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorCnpj");

                    b.HasIndex("LoteId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("NaoSeiBar.src.data.entities.Comanda", b =>
                {
                    b.HasOne("NaoSeiBar.src.data.entities.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clientecpf");

                    b.HasOne("Nao_Sei_Bar_Backend.src.data.entities.Produto", "produto")
                        .WithMany()
                        .HasForeignKey("produtoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");

                    b.Navigation("produto");
                });

            modelBuilder.Entity("NaoSeiBar.src.data.entities.Lote", b =>
                {
                    b.HasOne("NaoSeiBar.src.data.entities.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorCnpj");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Nao_Sei_Bar_Backend.src.data.entities.Produto", b =>
                {
                    b.HasOne("NaoSeiBar.src.data.entities.Fornecedor", null)
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorCnpj");

                    b.HasOne("NaoSeiBar.src.data.entities.Lote", "Lote")
                        .WithMany()
                        .HasForeignKey("LoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lote");
                });

            modelBuilder.Entity("NaoSeiBar.src.data.entities.Fornecedor", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
